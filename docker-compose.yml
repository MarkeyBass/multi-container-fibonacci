version: "3"
services:
  postgres:
    image: "postgres:latest"
    environment:
      - POSTGRES_PASSWORD=postgres_password
  redis:
    image: "redis:latest"
  nginx:
    depends_on:
      - api
      - client
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - "3050:80"
  api:
    build:
      dockerfile: Dockerfile.dev
      # From where the image will be build  (Dockerfile.dev in our case)
      context: ./server
    volumes:
      # Inside the container - don't try to overide /app/node_modules. Leave the folder as is
      - /app/node_modules
      - ./server:/app
    environment:
      # With this syntax the env vars will be set on runtime (Not in the image)
      # If th evariable name should be taken from the computer we must set the variable name without specifing a value.
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
    depends_on:
      - redis
      - postgres
  client:
    environment:
      - WDS_SOCKET_PORT=0
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /home/node/app/node_modules
      - ./client:/home/node/app
    depends_on:
      - api
  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
          


# # With the attempt to add health checks - didn't work (mySQL has a builtin health check system)
# version: "3"
# services:
#   postgres:
#     image: "postgres:latest"
#     environment:
#       - POSTGRES_PASSWORD=postgres_password
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U postgres"]
#       interval: 5s
#       timeout: 1s
#       retries: 3
#   redis:
#     image: "redis:latest"
#     healthcheck:
#       test: ["CMD", "redis-cli", "ping"]
#       interval: 5s
#       timeout: 1s
#       retries: 3
#   nginx:
#     depends_on:
#       api:
#         condition: service_healthy
#       client:
#         condition: service_healthy
#     restart: always
#     build:
#       dockerfile: Dockerfile.dev
#       context: ./nginx
#     ports:
#       - "3050:80"
#   api:
#     build:
#       dockerfile: Dockerfile.dev
#       # From where the image will be build  (Dockerfile.dev in our case)
#       context: ./server
#     volumes:
#       # Inside the container - don't try to overide /app/node_modules. Leave the folder as is
#       - /app/node_modules
#       - ./server:/app
#     environment:
#       # With this syntax the env vars will be set on runtime (Not in the image)
#       # If th evariable name should be taken from the computer we must set the variable name without specifing a value.
#       - REDIS_HOST=redis
#       - REDIS_PORT=6379
#       - PGUSER=postgres
#       - PGHOST=postgres
#       - PGDATABASE=postgres
#       - PGPASSWORD=postgres_password
#       - PGPORT=5432
#     depends_on:
#       redis:
#         condition: service_healthy
#       postgres:
#         condition: service_healthy
#     healthcheck:
#       test: ["CMD", "ping", "http://localhost:5000"]
#       interval: 5s
#       timeout: 1s
#       retries: 3
#   client:
#     environment:
#       - WDS_SOCKET_PORT=0
#     build:
#       dockerfile: Dockerfile.dev
#       context: ./client
#     volumes:
#       - /home/node/app/node_modules
#       - ./client:/home/node/app
#     depends_on:
#       api:
#         condition: service_healthy
#   worker:
#     build:
#       dockerfile: Dockerfile.dev
#       context: ./worker
#     volumes:
#       - /app/node_modules
#       - ./worker:/app
#     environment:
#       - REDIS_HOST=redis
#       - REDIS_PORT=6379
#     depends_on:
#       redis:
#         condition: service_healthy
          